/* * Copyright (c) 2015, 张涛. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.arkui.fz_tools.ui;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;/** * 兼容v4包的Fragment * * @author kymjs (http://www.kymjs.com/) . *         <p> *         这是一个懒惰的Fragment 用来出来ViewPage 结合Fragment复用的问题 */public abstract class BaseLazyFragment extends Fragment {    //当前Fragment视图对象    protected View fragmentRootView;    //上下文    protected Context mContext;    /**     * 是否加载布局     */    protected boolean isPrepare;    /**     * 是否显示布局     */    protected boolean isVisiable;    /**     * 是否是第一次加载     */    protected boolean isFirst;    /**     * Activity对象，避免getActivity()出现null     */    protected Activity mActivity;    @Override    public void onAttach(Context context) {        super.onAttach(context);        this.mActivity = (Activity) context;    }    protected abstract View inflaterView(LayoutInflater inflater,                                         ViewGroup container, Bundle bundle);    /**     * initialization widget, you should look like parentView.findviewbyid(id);     * call method     *     * @param parentView     */    protected void initView(View parentView) {    }    /**     * initialization data     */    protected void initData() {    }    /**     * 当通过changeFragment()显示时会被调用(类似于onResume)     */    public void onChange() {    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        mContext = getActivity();        //改造下这里避免重复加载        if (fragmentRootView == null) {            fragmentRootView = inflaterView(inflater, container, savedInstanceState);            isPrepare = true;            isFirst = true;            initView(fragmentRootView);            initData();            lazy();        }        return fragmentRootView;    }    public void showActivity(Class<?> cls) {        Intent intent = new Intent();        intent.setClass(mContext, cls);        startActivity(intent);    }    public void showActivity(Intent it) {        startActivity(it);    }    public void showActivity(Class<?> cls, Bundle extras) {        Intent intent = new Intent();        intent.putExtras(extras);        intent.setClass(mContext, cls);        startActivity(intent);    }    /**     * 判断当前Fragment是否已经显示     *     * @param isVisibleToUser     */    @Override    public void setUserVisibleHint(boolean isVisibleToUser) {        super.setUserVisibleHint(isVisibleToUser);        if (getUserVisibleHint()) {            isVisiable = true;            onVisible();        } else {            isVisiable = false;        }    }    protected void onVisible() {        lazy();    }    /**     * 要进行懒加载的数据     */    protected void lazy() {        if (isPrepare && isVisiable && isFirst) {            lazyLoadData();            isFirst = false;        }    }    /**     * 需要进行懒加载的数据     */    protected abstract void lazyLoadData();}